@model StudyPlan

@{
    ViewData["Title"] = Model.Title;
}

<div class="d-flex justify-content-between align-items-center mb-3">
    <h2><i class="bi bi-journal-bookmark"></i> @Model.Title</h2>
    <div>
        <span class="badge bg-primary">
            <i class="bi bi-calendar-week"></i> @Model.LessonsPerWeek занятий/неделю
        </span>
        <span class="badge bg-info">
            <i class="bi bi-clock"></i> @Model.LessonDurationMinutes мин.
        </span>
        <span class="badge bg-secondary">
            <i class="bi bi-calendar"></i> Начало @Model.StartDate.ToString("d")
        </span>
    </div>
</div>

<div class="d-flex justify-content-between mb-4">

    <div>
        <a asp-action="Edit" asp-route-id="@Model.StudyPlanId" class="btn btn-primary">
            <i class="bi bi-pencil"></i> Редактировать план
        </a>
        <form asp-action="Delete" method="post" class="d-inline ms-2">
            <input type="hidden" name="id" value="@Model.StudyPlanId" />
            <button type="submit" class="btn btn-danger"
                    onclick="return confirm('Вы уверены, что хотите удалить этот учебный план? Все связанные занятия также будут удалены.')">
                <i class="bi bi-trash"></i> Удалить
            </button>
        </form>
    </div>
</div>

<div class="row mb-4">
    <div class="col-md-4">
        <div class="card h-100">
            <div class="card-header bg-primary text-white">
                <i class="bi bi-people"></i> Ученики (@(Model.Lessons?.Select(l => l.Student)?.Distinct()?.Count() ?? 0)
            </div>
            <div class="card-body p-0">
                <ul class="list-group list-group-flush">
                    @foreach (var student in Model.Lessons?
                    .Select(l => l.Student)?
                    .Distinct()?
                    .OrderBy(s => s?.FullName) ?? Enumerable.Empty<Student>())
                    {
                        if (student != null)
                        {
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                @student.FullName
                                <a asp-controller="Students" asp-action="Index" asp-route-id="@student.StudentId"
                                   class="btn btn-sm btn-outline-primary">
                                    <i class="bi bi-eye"></i>
                                </a>
                            </li>
                        }
                    }
                </ul>
            </div>
        </div>
    </div>

    <div class="col-md-8">
        <div class="card h-100">
            <div class="card-header bg-primary text-white">
                <i class="bi bi-list-task"></i> Программа обучения (@Model.Topics.Count тем)
            </div>
            <div class="card-body">
                <div class="accordion" id="topicsAccordion">
                    @foreach (var topic in Model.Topics.OrderBy(t => t.Title))
                    {
                        <div class="accordion-item">
                            <h2 class="accordion-header">
                                <button class="accordion-button collapsed" type="button"
                                        data-bs-toggle="collapse" data-bs-target="#topic-@topic.TopicId">
                                    @topic.Title
                                    <span class="badge bg-secondary ms-2">@topic.SubTopics.Count подтем</span>
                                </button>
                            </h2>
                            <div id="topic-@topic.TopicId" class="accordion-collapse collapse"
                                 data-bs-parent="#topicsAccordion">
                                <div class="accordion-body">
                                    <ol class="list-group list-group-numbered">
                                        @foreach (var subTopic in topic.SubTopics.OrderBy(st => st.Order))
                                        {
                                            <li class="list-group-item d-flex justify-content-between align-items-start">
                                                <div class="ms-2 me-auto">
                                                    <div class="fw-bold">@subTopic.Title</div>
                                                </div>
                                            </li>
                                        }
                                    </ol>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<div class="card mb-4">
    <div class="card-header bg-primary text-white">
        <i class="bi bi-calendar-check"></i> Ближайшие занятия
    </div>
    <div class="card-body p-0">
        <div class="table-responsive">
            <table class="table table-hover mb-0">
                <thead class="table-light">
                    <tr>
                        <th>Дата и время</th>
                        <th>Ученик</th>
                        <th>Тема</th>
                        <th>Статус</th>
                        <th>Действия</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var lesson in Model.Lessons
                    .Where(l => l.StartTime >= DateTime.Now)
                    .OrderBy(l => l.StartTime)
                    .Take(5))
                    {
                        <tr>
                            <td>@lesson.StartTime.ToString("g")</td>
                            <td>@lesson.Student?.FullName</td>
                            <td>@lesson.Title</td>
                            <td>
                                <span class="badge @GetStatusBadgeClass(lesson.Status)">
                                    @lesson.GetLocalizedStatus()
                                </span>
                            </td>
                            <td>
                                <a asp-controller="Calendar" asp-action="Edit" asp-route-id="@lesson.LessonId"
                                   class="btn btn-sm btn-outline-primary">
                                    <i class="bi bi-pencil"></i>
                                </a>
                            </td>
                        </tr>
                    }
                    @if (!Model.Lessons.Any(l => l.StartTime >= DateTime.Now))
                    {
                        <tr>
                            <td colspan="5" class="text-center text-muted">Нет предстоящих занятий</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<div class="card">
    <div class="card-header bg-primary text-white">
        <i class="bi bi-info-circle"></i> Информация о плане
    </div>
    <div class="card-body">
        <dl class="row">
            <dt class="col-sm-3">Дата создания</dt>
            <dd class="col-sm-9">@Model.CreatedAt.ToString("g")</dd>

            <dt class="col-sm-3">Общее количество занятий</dt>
            <dd class="col-sm-9">@Model.Lessons.Count</dd>

            <dt class="col-sm-3">Завершено занятий</dt>
            <dd class="col-sm-9">@Model.Lessons.Count(l => l.Status == "Completed")</dd>

            <dt class="col-sm-3">Предстоящих занятий</dt>
            <dd class="col-sm-9">@Model.Lessons.Count(l => l.Status == "Planned" && l.StartTime >= DateTime.Now)</dd>
        </dl>
    </div>
</div>

@functions {
    string GetStatusBadgeClass(string status)
    {
        return status switch
        {
            "Completed" => "bg-success",
            "Cancelled" => "bg-danger",
            _ => "bg-warning text-dark"
        };
    }
}